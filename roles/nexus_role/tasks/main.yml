---
# tasks file for nexus_role
- name: Install Java 8
  ansible.builtin.yum:
    name: java-1.8.0-openjdk
    state: latest


- name: Create nexus group
  ansible.builtin.group:
    name: "{{ nexus_user }}"
    state: present

- name: Create nexus user
  ansible.builtin.user:
    name: "{{ nexus_user }}"
    group: "{{ nexus_user }}"
    home: "/opt/nexus"
    shell: "/bin/bash"
    state: present

- name: Ensure the home directory /opt/nexus directory exists
  ansible.builtin.file:
    path: "{{ nexus_home }}"
    state: directory
    owner: "{{ nexus_user }}"
    group: "{{ nexus_user }}"
    mode: '0755'
    recurse: yes


- name: Check if nexus dierctory exists before downloading
  ansible.builtin.stat:
    path: "{{ nexus_home }}/nexus" 
  register: nexus_directory

- name: Download latest version of Nexus
  ansible.builtin.get_url:
    url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-01-unix.tar.gz"
    dest: "{{ nexus_home }}"
  when: not nexus_directory.stat.exists

- name: Update and upgrade system packages
  ansible.builtin.yum:
    name: '*'
    state: latest

- name: Check archived nexus
  ansible.builtin.stat:
    path: "{{ nexus_home }}/nexus-{{ nexus_version }}-01-unix.tar.gz" 
  register: archived_nexus_file

- name: Extract nexus archive
  ansible.builtin.unarchive:
    src: "{{ nexus_home }}/nexus-{{ nexus_version }}-01-unix.tar.gz"
    dest: "{{ nexus_home }}" 
    remote_src: yes
  when: archived_nexus_file.stat.exists

- name: Clean up the downloaded archive
  ansible.builtin.file:
    path: "{{ nexus_home }}/nexus-{{ nexus_version }}-01-unix.tar.gz"
    state: absent
  

- name: Check unarchived nexus with version extension
  ansible.builtin.stat:
    path: "{{ nexus_home }}/nexus-{{ nexus_version }}-01"
  register: unarchived_nexus_directory

- name: Rename file 
  ansible.builtin.shell: "mv {{ nexus_home }}/nexus-{{ nexus_version }}-01 {{ nexus_home }}/nexus"
  when: unarchived_nexus_directory.stat.exists


- name: Set correct ownership for Nexus home directories
  ansible.builtin.command:
    cmd: chown -R {{ nexus_user }}:{{ nexus_user }} {{ nexus_home }}
  become: yes


##RUNNING NEXUS AS A SERVICE
- name: Create a Symlink for Nexus
  ansible.builtin.file:
    src: "{{ nexus_home }}/nexus/bin/nexus"
    dest: /etc/init.d/nexus
    state: link

- name: Create systemd service for Nexus
  ansible.builtin.template: #template module is used to copy the variables specified in the  default dir
    src: templates/nexus_config_file.j2
    dest: /etc/systemd/system/nexus.service
  notify: #triggers the handler below to reload upon copy
    - Reload systemd

- name: Start Nexus service
  ansible.builtin.systemd:
    name: nexus
    state: started
    enabled: yes
    

